knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(viridis)
library(RColorBrewer)
library(viridis)
library(RColorBrewer)
library(viridis)
library(psych)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(corrplot)
library(png)
library(magick)
df <- read.csv("user_behavior_dataset.csv")
head(df)
df <- df[, !names(df) %in% "User.ID"]
df
dim(df)
nrow(df)
ncol(df)
str(df)
summary(df)
describe(df)
colSums(is.na(df))
sum(duplicated(df))
ggplot(df, aes(x = Device.Model, fill = Device.Model)) +
geom_bar() +
labs(title = "Device Model Analysis",
x = "Model",
y = "Total Devices") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_viridis_d()  # Use Viridis color palette for discrete categories
ggplot(df, aes(x = Operating.System, fill = Operating.System)) +
geom_bar() +
scale_fill_viridis(discrete = TRUE) +  # Viridis for discrete categories
labs(title = "Operating System Analysis",
x = "Operating System",
y = "Total Devices") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(df, aes(x = Gender, fill = Gender)) +
geom_bar() +
scale_fill_brewer(palette = "Set2") +  # Use a different palette (e.g., Set2)
labs(title = "Gender Analysis",
x = "Gender",
y = "Total Devices") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) +
theme(plot.title = element_text(size = 16, hjust = 0.5))
columns <- c('App.Usage.Time..min.day.', 'Screen.On.Time..hours.day.',
'Battery.Drain..mAh.day.', 'Number.of.Apps.Installed',
'Data.Usage..MB.day.', 'Age')
# Create individual histograms for each column
plots <- lapply(columns, function(col) {
ggplot(df, aes_string(x = col)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "green", color = "black", alpha = 0.7) +
geom_density(color = "darkgreen") +
labs(title = col, x = gsub("\\.\\.", " ", col), y = "Density") +
theme_minimal()
})
combined_plot <- Reduce(`+`, plots) + plot_layout(ncol = 3)
combined_plot
ggplot(df, aes(x = User.Behavior.Class)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Dependent Feature Distribution",
x = "User Behavior Class",
y = "Count") +
theme_minimal() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.text.x = element_text(angle = 0, hjust = 0.5))
device_model_dummies <- model.matrix(~ Device.Model - 1, data = df)
operating_system_dummies <- model.matrix(~ Operating.System - 1, data = df)
df <- cbind(df, device_model_dummies, operating_system_dummies)
df <- df %>% select(-Device.Model, -Operating.System)
df <- df %>% mutate(Gender = ifelse(Gender == "Male", 1, 0))
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Value")
ggplot(df_long, aes(x = Variable, y = Value, fill = Variable)) +
geom_boxplot(outlier.color = "red", outlier.shape = 16, alpha = 0.7) +
scale_fill_viridis_d(option = "E") +  # Use a Viridis palette
labs(title = "Boxplot", x = NULL, y = "Value") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 75, hjust = 1),
legend.position = "none"
)
# Compute the correlation matrix
cor_matrix <- cor(df, use = "complete.obs")
# Save the heatmap to a larger figure
png("correlation_heatmap.png", width = 1600, height = 1200, res = 150)  # Adjust dimensions and resolution
corrplot(cor_matrix, method = "color", col = viridis(200),
title = "Correlation Heatmap", addCoef.col = "white",
tl.cex = 1.2, number.cex = 1.0, tl.srt = 45)
dev.off()
library(magick)
img <- image_read("correlation_heatmap.png")
print(img)
df <- df[, !names(df) %in% "User.ID"]
df
nrow(df)
ncol(df)
dim(df)
# Count the behavior classes
counts <- table(data$User.Behavior.Class)
cols(data)
str(df)
# Count the behavior classes
counts <- table(df$User.Behavior.Class)
# Create a pie chart
pie(counts,
main = "Distribution of User Behavior Classes",
col = rainbow(length(counts)))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Sample Data: Replace this with your actual data frame
data <- read.csv("path/to/your_dataset.csv")
# Count the number of users in each behavior class
behavior_counts <- df %>%
group_by(User.Behavior.Class) %>%
summarise(Count = n())
# Create a pie chart
pie_chart <- ggplot(behavior_counts, aes(x = "", y = Count, fill = as.factor(User.Behavior.Class))) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() + # Removes background and axes
scale_fill_viridis_d(name = "User Behavior Class") +
ggtitle("Distribution of User Behavior Classes") +
geom_text(aes(label = scales::percent(Count / sum(Count), accuracy = 0.1)),
position = position_stack(vjust = 0.5))
# Display the pie chart
print(pie_chart)
library(RColorBrewer)
library(viridis)
library(psych)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(corrplot)
library(png)
library(magick)
library(ggcorrplot)
install(‘ggcorrplot)
install.package(‘ggcorrplot'')
install.packages("ggcorrplot")
library(RColorBrewer)
library(viridis)
library(psych)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(corrplot)
library(png)
library(magick)
library(ggcorrplot)
library(gridExtra)
user_behavior_data$Gender <- as.factor(user_behavior_data$Gender)
user_behavior_data <- read.csv("user_behavior_dataset.csv")
user_behavior_data$Gender <- as.factor(user_behavior_data$Gender)
df$Gender <- as.factor(df$Gender)
df$Gender <- as.factor(df$Gender)
cor_data <- df %>%
select(App.Usage.Time..min.day., Screen.On.Time..hours.day., Battery.Drain..mAh.day.,
Number.of.Apps.Installed, Data.Usage..MB.day., Age)
cor_matrix <- cor(cor_data)
df$Gender <- as.factor(df$Gender)
cor_data <- df %>%
select(App.Usage.Time..min.day., Screen.On.Time..hours.day., Battery.Drain..mAh.day.,
Number.of.Apps.Installed, Data.Usage..MB.day., Age)
cor_matrix <- cor(cor_data)
corr_plot <- ggcorrplot(cor_matrix, lab = TRUE, title = "Correlation Heatmap")
df$Gender <- as.factor(df$Gender)
cor_data <- df %>%
select(App.Usage.Time..min.day., Screen.On.Time..hours.day., Battery.Drain..mAh.day.,
Number.of.Apps.Installed, Data.Usage..MB.day., Age)
cor_matrix <- cor(cor_data)
corr_plot <- ggcorrplot(cor_matrix, lab = TRUE, title = "Correlation Heatmap")
corr_plot
screen_gender_plot <- ggplot(df, aes(x = Gender, y = Screen.On.Time..hours.day.)) +
geom_boxplot(fill = "skyblue") +
labs(title = "Screen On Time by Gender", x = "Gender", y = "Screen On Time (hours/day)") +
theme_minimal()
screen_gender_plot
behavior_class_plot <- ggplot(df, aes(x = factor(User.Behavior.Class))) +
geom_bar(fill = "orange") +
labs(title = "Distribution of User Behavior Classes", x = "Behavior Class", y = "Count") +
theme_minimal()
screen_gender_plot <- ggplot(df, aes(x = Gender, y = Screen.On.Time..hours.day.)) +
geom_boxplot(fill = "skyblue") +
labs(title = "Screen On Time by Gender", x = "Gender", y = "Screen On Time (hours/day)") +
theme_minimal()
screen_gender_plot
behavior_class_plot <- ggplot(df, aes(x = factor(User.Behavior.Class))) +
geom_bar(fill = "orange") +
labs(title = "Distribution of User Behavior Classes", x = "Behavior Class", y = "Count") +
theme_minimal()
behavior_class_plot <- ggplot(df, aes(x = factor(User.Behavior.Class))) +
geom_bar(fill = "orange") +
labs(title = "Distribution of User Behavior Classes", x = "Behavior Class", y = "Count") +
theme_minimal()
behavior_class_plot
scatter_plot <- ggplot(df, aes(x = Screen.On.Time..hours.day., y = Battery.Drain..mAh.day.)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Screen Time vs. Battery Drain", x = "Screen On Time (hours/day)", y = "Battery Drain (mAh/day)") +
theme_minimal()
scatter_plot
scatter_plot <- ggplot(df, aes(x = Screen.On.Time..hours.day., y = Battery.Drain..mAh.day.)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Screen Time vs. Battery Drain", x = "Screen On Time (hours/day)", y = "Battery Drain (mAh/day)") +
theme_minimal()
scatter_plot
usage_histogram <- ggplot(df, aes(x = App.Usage.Time..min.day.)) +
geom_histogram(binwidth = 30, fill = "purple", color = "black") +
labs(title = "Histogram of App Usage Time", x = "App Usage Time (min/day)", y = "Frequency") +
theme_minimal()
usage_histogram <- ggplot(df, aes(x = App.Usage.Time..min.day.)) +
geom_histogram(binwidth = 30, fill = "purple", color = "black") +
labs(title = "Histogram of App Usage Time", x = "App Usage Time (min/day)", y = "Frequency") +
theme_minimal()
usage_histogram
age_behavior_plot <- ggplot(df, aes(x = factor(User.Behavior.Class), y = Age)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Age Distribution by User Behavior Class", x = "User Behavior Class", y = "Age") +
theme_minimal()
age_behavior_plot <- ggplot(df, aes(x = factor(User.Behavior.Class), y = Age)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Age Distribution by User Behavior Class", x = "User Behavior Class", y = "Age") +
theme_minimal()
age_behavior_plot
usage_histogram <- ggplot(df, aes(x = App.Usage.Time..min.day.)) +
geom_histogram(binwidth = 30, fill = "purple", color = "black") +
labs(title = "Histogram of App Usage Time", x = "App Usage Time (min/day)", y = "Frequency") +
theme_minimal()
usage_histogram
device_model_dummies <- model.matrix(~ Device.Model - 1, data = df)
gender_behavior_plot <- ggplot(df, aes(x = Gender, fill = factor(User.Behavior.Class))) +
geom_bar(position = "fill") +
labs(title = "Proportion of Behavior Classes by Gender", x = "Gender", y = "Proportion", fill = "Behavior Class") +
theme_minimal()
gender_behavior_plot <- ggplot(df, aes(x = Gender, fill = factor(User.Behavior.Class))) +
geom_bar(position = "fill") +
labs(title = "Proportion of Behavior Classes by Gender", x = "Gender", y = "Proportion", fill = "Behavior Class") +
theme_minimal()
gender_behavior_plot
age_behavior_plot <- ggplot(df, aes(x = factor(User.Behavior.Class), y = Age)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Age Distribution by User Behavior Class", x = "User Behavior Class", y = "Age") +
theme_minimal()
age_behavior_plot
device_model_dummies <- model.matrix(~ Device.Model - 1, data = df)
device_model_dummies <- model.matrix(~ Device.Model - 1, data = df)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(viridis)
library(psych)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(corrplot)
library(png)
library(magick)
library(ggcorrplot)
library(gridExtra)
df <- read.csv("user_behavior_dataset.csv")
head(df)
df <- df[, !names(df) %in% "User.ID"]
df
dim(df)
nrow(df)
ncol(df)
str(df)
summary(df)
describe(df)
colSums(is.na(df))
sum(duplicated(df))
ggplot(df, aes(x = Device.Model, fill = Device.Model)) +
geom_bar() +
labs(title = "Device Model Analysis",
x = "Model",
y = "Total Devices") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_viridis_d()  # Use Viridis color palette for discrete categories
ggplot(df, aes(x = Operating.System, fill = Operating.System)) +
geom_bar() +
scale_fill_viridis(discrete = TRUE) +  # Viridis for discrete categories
labs(title = "Operating System Analysis",
x = "Operating System",
y = "Total Devices") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(df, aes(x = Gender, fill = Gender)) +
geom_bar() +
scale_fill_brewer(palette = "Set2") +  # Use a different palette (e.g., Set2)
labs(title = "Gender Analysis",
x = "Gender",
y = "Total Devices") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) +
theme(plot.title = element_text(size = 16, hjust = 0.5))
columns <- c('App.Usage.Time..min.day.', 'Screen.On.Time..hours.day.',
'Battery.Drain..mAh.day.', 'Number.of.Apps.Installed',
'Data.Usage..MB.day.', 'Age')
# Create individual histograms for each column
plots <- lapply(columns, function(col) {
ggplot(df, aes_string(x = col)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "green", color = "black", alpha = 0.7) +
geom_density(color = "darkgreen") +
labs(title = col, x = gsub("\\.\\.", " ", col), y = "Density") +
theme_minimal()
})
combined_plot <- Reduce(`+`, plots) + plot_layout(ncol = 3)
combined_plot
ggplot(df, aes(x = User.Behavior.Class)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Dependent Feature Distribution",
x = "User Behavior Class",
y = "Count") +
theme_minimal() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.text.x = element_text(angle = 0, hjust = 0.5))
device_model_dummies <- model.matrix(~ Device.Model - 1, data = df)
operating_system_dummies <- model.matrix(~ Operating.System - 1, data = df)
df <- cbind(df, device_model_dummies, operating_system_dummies)
df <- df %>% select(-Device.Model, -Operating.System)
df <- df %>% mutate(Gender = ifelse(Gender == "Male", 1, 0))
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Value")
ggplot(df_long, aes(x = Variable, y = Value, fill = Variable)) +
geom_boxplot(outlier.color = "red", outlier.shape = 16, alpha = 0.7) +
scale_fill_viridis_d(option = "E") +  # Use a Viridis palette
labs(title = "Boxplot", x = NULL, y = "Value") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 75, hjust = 1),
legend.position = "none"
)
# Compute the correlation matrix
cor_matrix <- cor(df, use = "complete.obs")
# Save the heatmap to a larger figure
png("correlation_heatmap.png", width = 1600, height = 1200, res = 150)  # Adjust dimensions and resolution
corrplot(cor_matrix, method = "color", col = viridis(200),
title = "Correlation Heatmap", addCoef.col = "white",
tl.cex = 1.2, number.cex = 1.0, tl.srt = 45)
dev.off()
library(magick)
img <- image_read("correlation_heatmap.png")
print(img)
# Compute the correlation matrix
cor_matrix <- cor(df, use = "complete.obs")
# Save the heatmap to a larger figure
png("correlation_heatmap.png", width = 1600, height = 1200, res = 150)  # Adjust dimensions and resolution
corrplot(cor_matrix, method = "color", col = viridis(200),
title = "Correlation Heatmap", addCoef.col = "white",
tl.cex = 1.2, number.cex = 1.0, tl.srt = 45)
dev.off()
df$Gender <- as.factor(df$Gender)
cor_data <- df %>%
select(App.Usage.Time..min.day., Screen.On.Time..hours.day., Battery.Drain..mAh.day.,
Number.of.Apps.Installed, Data.Usage..MB.day., Age)
cor_matrix <- cor(cor_data)
corr_plot <- ggcorrplot(cor_matrix, lab = TRUE, title = "Correlation Heatmap")
corr_plot
screen_gender_plot <- ggplot(df, aes(x = Gender, y = Screen.On.Time..hours.day.)) +
geom_boxplot(fill = "skyblue") +
labs(title = "Screen On Time by Gender", x = "Gender", y = "Screen On Time (hours/day)") +
theme_minimal()
screen_gender_plot
scatter_plot <- ggplot(df, aes(x = Screen.On.Time..hours.day., y = Battery.Drain..mAh.day.)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Screen Time vs. Battery Drain", x = "Screen On Time (hours/day)", y = "Battery Drain (mAh/day)") +
theme_minimal()
scatter_plot
usage_histogram <- ggplot(df, aes(x = App.Usage.Time..min.day.)) +
geom_histogram(binwidth = 30, fill = "purple", color = "black") +
labs(title = "Histogram of App Usage Time", x = "App Usage Time (min/day)", y = "Frequency") +
theme_minimal()
usage_histogram
age_behavior_plot <- ggplot(df, aes(x = factor(User.Behavior.Class), y = Age)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Age Distribution by User Behavior Class", x = "User Behavior Class", y = "Age") +
theme_minimal()
age_behavior_plot
gender_behavior_plot <- ggplot(df, aes(x = Gender, fill = factor(User.Behavior.Class))) +
geom_bar(position = "fill") +
labs(title = "Proportion of Behavior Classes by Gender", x = "Gender", y = "Proportion", fill = "Behavior Class") +
theme_minimal()
gender_behavior_plot
df <- df[, !names(df) %in% "User.ID"]
tail(df)
